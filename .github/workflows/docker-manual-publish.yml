name: Manually create and publish a Docker image to GHCR

on: 
  workflow_dispatch:
    inputs:
      service:
        description: "Which part of the app"
        required: true
        type: choice
        options:
          - frontend
          - backend
      tag:
        description: "What tag should the image have?"
        required: true
        type: string
      semver:
        description: "Interpret tag as semver?"
        required: true
        type: boolean
        default: true
      latest:
        description: "Mark as latest?"
        type: boolean
        default: false
        required: true
      push:
        description: "Push on success?"
        type: boolean
        default: false
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "${{ github.repository }}_${{ inputs.service }}"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: latest=${{ inputs.latest }}
          tags: |
            type=raw,value=${{ inputs.tag }},enable=${{ !inputs.semver }}
            type=semver,prefix=v,pattern={{version}},value=${{ inputs.tag }},enable=${{ inputs.semver }}

      - name: Verify extraction
        id: verifyTag
        run: |
          TAG="${{ steps.meta.outputs.tags }}"
          if [[ "$TAG" == "" ]]; then
            echo "No tags found"
            exit 1
          fi
      
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./${{ inputs.service }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v2
#        with:
#          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: ${{ inputs.push }}
      